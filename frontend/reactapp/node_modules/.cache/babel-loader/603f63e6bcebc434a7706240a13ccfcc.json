{"ast":null,"code":"var _jsxFileName = \"/Users/ptakchun/Downloads/CODE/Lighthouse/Test1/team-29/frontend/reactapp/src/App.js\";\nimport React, { useState, useEffect } from 'react'; // import logo from './logo.svg';\n\nimport './App.css'; // import Login from './Login';\n\nimport $ from 'jquery';\nimport { MediaQuery } from 'react-responsive';\nimport DesktopBreakpoint from './utilities/desktopbreakpoint';\nimport TabletBreakpoint from './utilities/tabletbreakpoint';\nimport PhoneBreakpoint from './utilities/phonebreakpoint';\nimport { Route, Switch, Link, BrowserRouter, HashRouter } from \"react-router-dom\"; // import { socket } from 'socketUtil.js';\n// import { io } from \"socket.io-client\";\n\nimport axios from 'axios';\nimport './bootstrap/dist/css/bootstrap.min.css';\nconst API_URL = 'http://localhost:3000'; // class App2 extends React.Component {\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//         isLoggedIn: false,\n//         role: '',\n//     };\n//     this.handleLoginSubmit = this.handleLoginSubmit.bind(this);\n//     this.handleLogOut = this.handleLogOut.bind(this);\n//   }\n//   handleLoginSubmit(event,role) {\n//     event.preventDefault();\n//     this.setState({\n//       isLoggedIn:true,\n//       role: role,\n//     });\n//   }\n// handleLogOut(){\n//   this.setState({\n//     isLoggedIn:false,\n//   });\n// }\n// getCMUserInterface(){\n//   if(true){\n//     return(\n//       // <HashRouter basename=\"/\">\n//       //  <Route path=\"/\" exact component={() => <ClientPage handleLogOut={this.handleLogOut} />} />\n//       //   <Route path=\"/clientPage2\" component={ClientPage2} />\n//       //   <Route path=\"/clientPage4\" component={ClientPage4} />\n//       //   <Route path=\"/clientPageDetail\" component={ClientPageDetail} />\n//       // </HashRouter>\n//   );\n//   }else{\n//     return(\n//     <ClientsToMeet handleLogOut={this.handleLogOut} />);\n//   }\n// }\n// render() {\n//   let userInterface = null;\n//   if(true){\n//       userInterface = this.getCMUserInterface();\n//   }else{\n//     userInterface = <Login handleLoginSubmit={this.handleLoginSubmit} />;\n//   }\n//   return(\n//     <div className=\"App\">\n//       {ClientPage2}\n//     </div>\n//   );\n// }\n// }\n\nconst App = props => {\n  // const socket = io(\"http://127.0.0.1:5000/\", {path: \"\" });\n  const [getTableFunc, setGetTableFunc] = useState(0);\n  const [client_config, set_client_config] = useState({\n    \"update_frequency_second\": 1\n  });\n  const [update_frequency_ms, update_frequency_ms_user_input] = useInput({\n    type: \"text\",\n    label: \"Update Frequency Milliseconds: \",\n    id: \"update_frequency_ms\"\n  });\n  const [update_show_frequency_ms, update_show_frequency_ms_user_input] = useInput({\n    type: \"text\",\n    label: \"Update Show Frequency Milliseconds: \",\n    id: \"update_show_frequency_ms\"\n  });\n  const [count, setCount] = useState({\n    \"x\": 0,\n    y: 1\n  });\n  const [table, setTable] = useState([]); // const [prevTable, setprevTable] = useState([]);\n\n  function handleReloadTable() {\n    clearInterval(getTableFunc);\n    let freq = 3000;\n\n    if (Number.isFinite(parseInt(update_show_frequency_ms))) {\n      freq = parseInt(update_show_frequency_ms);\n    }\n\n    setGetTableFunc(setInterval(function () {\n      axios.get(API_URL + \"/getTable\").then(res => {\n        console.log(res);\n        setTable(table => {\n          let result = res.data;\n\n          for (let i = 0; i < table.length; i++) {\n            result[i][\"prev_price\"] = table[i]['price'];\n          }\n\n          return result;\n        }); // console.log(table);\n      });\n    }, freq));\n  }\n\n  useEffect(() => {\n    console.log(table);\n  }, [table]);\n\n  function useInput({\n    type,\n    label,\n    id\n  }) {\n    const [value, setValue] = useState(\"\");\n    const input = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }, label), /*#__PURE__*/React.createElement(\"input\", {\n      id: id,\n      value: value,\n      onChange: e => setValue(e.target.value),\n      type: type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }));\n    return [value, input];\n  }\n\n  function handleServerConfig() {\n    let server_config = {};\n\n    if (Number.isFinite(parseInt(update_frequency_ms))) {\n      server_config[\"update_frequency_milliseconds\"] = parseInt(update_frequency_ms);\n    }\n\n    axios.post(API_URL + '/setServerConfig', server_config).then(function (response) {\n      console.log(\"success update\");\n      console.log(response);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }), \"Server Config:\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }), update_frequency_ms_user_input, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleServerConfig(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, \"Update Server Config\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }), \"User GUI Config:\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }), update_show_frequency_ms_user_input, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleReloadTable(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, \"Reload Table\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, \"Element Table:-\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    responsive: true,\n    border: 2,\n    cellPadding: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, \"Symbol\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, \"Price Change\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 12\n    }\n  }, table && Object.keys(table).map(function (element) {\n    let Color = {\n      color: \"red\"\n    };\n\n    if (table[element]) {\n      if (table[element][\"prev_price\"] <= table[element][\"price\"]) {\n        Color = {\n          color: \"green\"\n        };\n      }\n    }\n\n    let price_change = Math.round((table[element][\"price\"] - table[element][\"prev_price\"]) * 10) / 10;\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 24\n      }\n    }, table[element][\"symbol\"]), /*#__PURE__*/React.createElement(\"td\", {\n      style: Color,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 24\n      }\n    }, table[element][\"price\"]), /*#__PURE__*/React.createElement(\"td\", {\n      style: Color,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 24\n      }\n    }, price_change));\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/ptakchun/Downloads/CODE/Lighthouse/Test1/team-29/frontend/reactapp/src/App.js"],"names":["React","useState","useEffect","$","MediaQuery","DesktopBreakpoint","TabletBreakpoint","PhoneBreakpoint","Route","Switch","Link","BrowserRouter","HashRouter","axios","API_URL","App","props","getTableFunc","setGetTableFunc","client_config","set_client_config","update_frequency_ms","update_frequency_ms_user_input","useInput","type","label","id","update_show_frequency_ms","update_show_frequency_ms_user_input","count","setCount","y","table","setTable","handleReloadTable","clearInterval","freq","Number","isFinite","parseInt","setInterval","get","then","res","console","log","result","data","i","length","value","setValue","input","e","target","handleServerConfig","server_config","post","response","Object","keys","map","element","Color","color","price_change","Math","round"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n// import Login from './Login';\nimport $ from 'jquery';\nimport { MediaQuery } from 'react-responsive'\nimport DesktopBreakpoint from './utilities/desktopbreakpoint';\nimport TabletBreakpoint from './utilities/tabletbreakpoint';\nimport PhoneBreakpoint from './utilities/phonebreakpoint';\nimport { Route, Switch, Link, BrowserRouter,HashRouter } from \"react-router-dom\";\n// import { socket } from 'socketUtil.js';\n// import { io } from \"socket.io-client\";\nimport axios from 'axios';\n\nimport './bootstrap/dist/css/bootstrap.min.css';\n\nconst API_URL = 'http://localhost:3000';\n\n// class App2 extends React.Component {\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//         isLoggedIn: false,\n//         role: '',\n//     };\n//     this.handleLoginSubmit = this.handleLoginSubmit.bind(this);\n//     this.handleLogOut = this.handleLogOut.bind(this);\n//   }\n\n\n//   handleLoginSubmit(event,role) {\n//     event.preventDefault();\n//     this.setState({\n//       isLoggedIn:true,\n//       role: role,\n//     });\n\n//   }\n\n  // handleLogOut(){\n  //   this.setState({\n  //     isLoggedIn:false,\n  //   });\n  // }\n\n  // getCMUserInterface(){\n  //   if(true){\n  //     return(\n  //       // <HashRouter basename=\"/\">\n  //       //  <Route path=\"/\" exact component={() => <ClientPage handleLogOut={this.handleLogOut} />} />\n  //       //   <Route path=\"/clientPage2\" component={ClientPage2} />\n  //       //   <Route path=\"/clientPage4\" component={ClientPage4} />\n  //       //   <Route path=\"/clientPageDetail\" component={ClientPageDetail} />\n\n  //       // </HashRouter>\n  //   );\n  //   }else{\n  //     return(\n  //     <ClientsToMeet handleLogOut={this.handleLogOut} />);\n  //   }\n      \n\n  // }\n\n\n  // render() {\n  //   let userInterface = null;\n  //   if(true){\n  //       userInterface = this.getCMUserInterface();\n  //   }else{\n  //     userInterface = <Login handleLoginSubmit={this.handleLoginSubmit} />;\n  //   }\n  //   return(\n  //     <div className=\"App\">\n  //       {ClientPage2}\n  //     </div>\n  //   );\n\n  // }\n\n// }\n\nconst App = (props) =>{\n  // const socket = io(\"http://127.0.0.1:5000/\", {path: \"\" });\n\n  const [getTableFunc, setGetTableFunc] = useState(0);\n  const [client_config, set_client_config] = useState({\"update_frequency_second\": 1});\n  const [update_frequency_ms, update_frequency_ms_user_input] = useInput({ type: \"text\",label:\"Update Frequency Milliseconds: \", id:\"update_frequency_ms\" });\n  const [update_show_frequency_ms, update_show_frequency_ms_user_input] = useInput({ type: \"text\",label:\"Update Show Frequency Milliseconds: \", id:\"update_show_frequency_ms\" });\n  const [count, setCount] = useState({\"x\":0, y:1});\n  const [table, setTable] = useState([]);\n\n  // const [prevTable, setprevTable] = useState([]);\n\n\n  function handleReloadTable(){\n    clearInterval(getTableFunc);\n    let freq = 3000;\n    if(Number.isFinite(parseInt(update_show_frequency_ms))){\n      freq = parseInt(update_show_frequency_ms)\n    }\n\n    setGetTableFunc(setInterval(function(){ \n      axios.get(API_URL+\"/getTable\").then((res)=>{\n        console.log(res);\n  \n        setTable((table)=>{\n          let result = res.data;\n          for(let i=0; i<table.length; i++){\n            result[i][\"prev_price\"] = table[i]['price'];\n          }\n          return result;\n        });\n        // console.log(table);\n      }); \n    }, freq));\n\n  }\n\n  useEffect(()=>{\n    console.log(table);\n  },[table]);\n\n  function useInput({ type, label, id }) {\n    const [value, setValue] = useState(\"\");\n    \n    const input = (<div><label for={id}>{label}</label>\n                    <input id={id} value={value} onChange={e => setValue(e.target.value)} type={type} />\n                  </div>);\n    return [value, input];\n  }\n\n  function handleServerConfig(){\n    let server_config = {};\n    if(Number.isFinite(parseInt(update_frequency_ms))){\n      server_config[\"update_frequency_milliseconds\"] = parseInt(update_frequency_ms)\n    }\n    axios.post(API_URL+'/setServerConfig',server_config).then(function(response){\n      console.log(\"success update\");\n      console.log(response);\n    });\n  }\n\n  return (\n    <div id=\"App\">\n\n      <br/>\n      <br/>\n      Server Config:\n      <br/>\n      {update_frequency_ms_user_input}\n      <br/>\n      <button onClick={()=>handleServerConfig()}>\n        Update Server Config\n      </button>\n      <br/>\n      \n      User GUI Config:\n      <br/>\n      {update_show_frequency_ms_user_input}\n      \n\n      <br/>\n      <button onClick={()=>handleReloadTable()}>\n        Reload Table\n      </button>\n\n\n      <div>\n        <h2>Element Table:-</h2>\n        <table className=\"table\" responsive border={2} cellPadding={5}>\n           <thead>\n              <tr>\n                <td>Symbol</td>\n                <td>Price</td>\n                <td>Price Change</td>\n              </tr>\n           </thead>\n           <tbody>\n              {\n                  table && \n                  Object.keys(table).map(function (element) {\n                    let Color = { color: \"red\" };\n                    if(table[element]){\n                      if(table[element][\"prev_price\"]<=table[element][\"price\"]){\n                        Color = { color: \"green\" };\n                      }\n                    }\n                    let price_change = Math.round((table[element][\"price\"]-table[element][\"prev_price\"])*10)/10;\n\n                     return <tr>\n                       <td>{table[element][\"symbol\"]}</td>\n                       <td style={Color}>{table[element][\"price\"]}</td>\n                       <td style={Color}>{price_change}</td>\n                     </tr>;\n                  })\n              }\n           </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}